// Generated by gencpp from file assignment2_ros1/UserInput.msg
// DO NOT EDIT!


#ifndef ASSIGNMENT2_ROS1_MESSAGE_USERINPUT_H
#define ASSIGNMENT2_ROS1_MESSAGE_USERINPUT_H

#include <ros/service_traits.h>


#include <assignment2_ros1/UserInputRequest.h>
#include <assignment2_ros1/UserInputResponse.h>


namespace assignment2_ros1
{

struct UserInput
{

typedef UserInputRequest Request;
typedef UserInputResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct UserInput
} // namespace assignment2_ros1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::assignment2_ros1::UserInput > {
  static const char* value()
  {
    return "58c0c42efd219b57a84a9b7f48b80cad";
  }

  static const char* value(const ::assignment2_ros1::UserInput&) { return value(); }
};

template<>
struct DataType< ::assignment2_ros1::UserInput > {
  static const char* value()
  {
    return "assignment2_ros1/UserInput";
  }

  static const char* value(const ::assignment2_ros1::UserInput&) { return value(); }
};


// service_traits::MD5Sum< ::assignment2_ros1::UserInputRequest> should match
// service_traits::MD5Sum< ::assignment2_ros1::UserInput >
template<>
struct MD5Sum< ::assignment2_ros1::UserInputRequest>
{
  static const char* value()
  {
    return MD5Sum< ::assignment2_ros1::UserInput >::value();
  }
  static const char* value(const ::assignment2_ros1::UserInputRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment2_ros1::UserInputRequest> should match
// service_traits::DataType< ::assignment2_ros1::UserInput >
template<>
struct DataType< ::assignment2_ros1::UserInputRequest>
{
  static const char* value()
  {
    return DataType< ::assignment2_ros1::UserInput >::value();
  }
  static const char* value(const ::assignment2_ros1::UserInputRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::assignment2_ros1::UserInputResponse> should match
// service_traits::MD5Sum< ::assignment2_ros1::UserInput >
template<>
struct MD5Sum< ::assignment2_ros1::UserInputResponse>
{
  static const char* value()
  {
    return MD5Sum< ::assignment2_ros1::UserInput >::value();
  }
  static const char* value(const ::assignment2_ros1::UserInputResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::assignment2_ros1::UserInputResponse> should match
// service_traits::DataType< ::assignment2_ros1::UserInput >
template<>
struct DataType< ::assignment2_ros1::UserInputResponse>
{
  static const char* value()
  {
    return DataType< ::assignment2_ros1::UserInput >::value();
  }
  static const char* value(const ::assignment2_ros1::UserInputResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ASSIGNMENT2_ROS1_MESSAGE_USERINPUT_H
